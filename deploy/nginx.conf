# Nginx server config for TalkSphere (talk-sphere.com)# Nginx server config for TalkSphere (talk-sphere.com)

# Copy to /etc/nginx/sites-available/chatverse and symlink to sites-enabled# Copy to /etc/nginx/sites-available/chatverse and symlink to sites-enabled



server {# Main server block - HTTP only initially, HTTPS after SSL setup

    listen 80;server {

    server_name talk-sphere.com www.talk-sphere.com;    listen 80;

    server_name talk-sphere.com www.talk-sphere.com;

    # Security headers

    add_header X-Frame-Options "SAMEORIGIN" always;    # Security headers

    add_header X-XSS-Protection "1; mode=block" always;    add_header X-Frame-Options "SAMEORIGIN" always;

    add_header X-Content-Type-Options "nosniff" always;    add_header X-XSS-Protection "1; mode=block" always;

    add_header Referrer-Policy "no-referrer-when-downgrade" always;    add_header X-Content-Type-Options "nosniff" always;

    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Serve frontend build

    root /var/www/chatverse;    # Serve frontend build

    index index.html;    root /var/www/chatverse;

    index index.html;

    # Handle direct SPA routes

    location / {    # Gzip compression

        try_files $uri $uri/ /index.html;    gzip on;

            gzip_vary on;

        # Cache static assets    gzip_min_length 1024;

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

            expires 1y;

            add_header Cache-Control "public, immutable";    # Handle direct SPA routes

        }    location / {

    }        try_files $uri $uri/ /index.html;

        

    # Proxy API to Node backend        # Cache static assets

    location /api/ {        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {

        proxy_pass http://127.0.0.1:5000/api/;            expires 1y;

        proxy_http_version 1.1;            add_header Cache-Control "public, immutable";

        proxy_set_header Upgrade $http_upgrade;        }

        proxy_set_header Connection 'upgrade';    }

        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;    # Proxy API to Node backend

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    location /api/ {

        proxy_set_header X-Forwarded-Proto $scheme;        proxy_pass http://127.0.0.1:5000/api/;

        proxy_cache_bypass $http_upgrade;        proxy_http_version 1.1;

        proxy_read_timeout 300s;        proxy_set_header Upgrade $http_upgrade;

        proxy_connect_timeout 75s;        proxy_set_header Connection 'upgrade';

                proxy_set_header Host $host;

        # CORS headers for API        proxy_set_header X-Real-IP $remote_addr;

        add_header Access-Control-Allow-Origin *;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Headers "Content-Type, Authorization";        proxy_cache_bypass $http_upgrade;

                proxy_read_timeout 300s;

        # Handle preflight requests        proxy_connect_timeout 75s;

        if ($request_method = 'OPTIONS') {        

            add_header Access-Control-Allow-Origin *;        # CORS headers for API

            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";        add_header Access-Control-Allow-Origin *;

            add_header Access-Control-Allow-Headers "Content-Type, Authorization";        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";

            add_header Content-Length 0;        add_header Access-Control-Allow-Headers "Content-Type, Authorization";

            add_header Content-Type text/plain;        

            return 200;        # Handle preflight requests

        }        if ($request_method = 'OPTIONS') {

    }            add_header Access-Control-Allow-Origin *;

            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";

    # Optional: serve uploads            add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    location /uploads/ {            add_header Content-Length 0;

        alias /var/www/chatverse/uploads/;            add_header Content-Type text/plain;

        expires 1y;            return 200;

        add_header Cache-Control "public";        }

    }    }



    # Deny access to sensitive files    # Optional: serve uploads (if you add a public uploads dir)

    location ~ /\. {    location /uploads/ {

        deny all;        alias /var/www/chatverse/uploads/;

    }        expires 1y;

            add_header Cache-Control "public";

    location ~ \.(env|git|svn)$ {    }

        deny all;

    }    # Deny access to sensitive files

}    location ~ /\. {
        deny all;
    }
    
    location ~ \.(env|git|svn)$ {
        deny all;
    }
}

    # Serve frontend build
    root /var/www/chatverse;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Handle direct SPA routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Proxy API to Node backend
    location /api/ {
        proxy_pass http://127.0.0.1:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
    }

    # Optional: serve uploads (if you add a public uploads dir)
    location /uploads/ {
        alias /var/www/chatverse/uploads/;
        expires 1y;
        add_header Cache-Control "public";
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(env|git|svn)$ {
        deny all;
    }
}
